{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","keyPressed","setKeyPressed","useEffect","document","addEventListener","event","key","className","ReactDOM","render","getElementById"],"mappings":"wMAEaA,EAAgB,WAC3B,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAQA,OANAC,qBAAU,WACRC,SAASC,iBAAiB,SAAS,SAACC,GAClCJ,EAAcI,EAAMC,UAErB,IAGD,qBAAKC,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGP,EAAU,mCACqBA,EADrB,KAEP,+B,MCXZQ,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.81b124c6.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const App: React.FC = () => {\n  const [keyPressed, setKeyPressed] = useState('');\n\n  useEffect(() => {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      setKeyPressed(event.key);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <p className=\"App__message\">\n        {keyPressed\n          ? `The last pressed key is [${keyPressed}]`\n          : 'Nothing was pressed yet' }\n      </p>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}